/*
Confluent Cloud APIs

Testing LifecycleV1ApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	openapiclient "github.com/shono-io/shono-ccloud"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_openapi_LifecycleV1ApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test LifecycleV1ApiService PauseConnectv1Connector", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var connectorName string
		var environmentId string
		var kafkaClusterId string

		httpRes, err := apiClient.LifecycleV1Api.PauseConnectv1Connector(context.Background(), connectorName, environmentId, kafkaClusterId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test LifecycleV1ApiService ResumeConnectv1Connector", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var connectorName string
		var environmentId string
		var kafkaClusterId string

		httpRes, err := apiClient.LifecycleV1Api.ResumeConnectv1Connector(context.Background(), connectorName, environmentId, kafkaClusterId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
