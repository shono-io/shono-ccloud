/*
Confluent Cloud APIs

Testing StatusV1ApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_StatusV1ApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test StatusV1ApiService ListConnectv1ConnectorTasks", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectorName string
		var environmentId string
		var kafkaClusterId string

		resp, httpRes, err := apiClient.StatusV1Api.ListConnectv1ConnectorTasks(context.Background(), connectorName, environmentId, kafkaClusterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StatusV1ApiService ReadConnectv1ConnectorStatus", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var connectorName string
		var environmentId string
		var kafkaClusterId string

		resp, httpRes, err := apiClient.StatusV1Api.ReadConnectv1ConnectorStatus(context.Background(), connectorName, environmentId, kafkaClusterId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
